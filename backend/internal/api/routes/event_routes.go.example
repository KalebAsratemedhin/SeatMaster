package routes

// This is an example file showing how to structure future route groups
// Remove the .example extension and implement when you add event functionality

import (
	"backend/internal/api/handlers"
	"backend/internal/api/middleware"

	"github.com/gin-gonic/gin"
)

// SetupEventRoutes configures all event-related routes
func SetupEventRoutes(router *gin.Engine, eventHandler *handlers.EventHandler, authMiddleware *middleware.AuthMiddleware) {
	// Public event routes (if any)
	events := router.Group("/events")
	{
		// events.GET("/", eventHandler.GetPublicEvents) // Example: public event listing
	}

	// Protected event routes (authentication required)
	eventsProtected := router.Group("/events")
	eventsProtected.Use(authMiddleware.AuthRequired())
	{
		// eventsProtected.GET("/", eventHandler.GetUserEvents)
		// eventsProtected.POST("/", eventHandler.CreateEvent)
		// eventsProtected.GET("/:id", eventHandler.GetEvent)
		// eventsProtected.PUT("/:id", eventHandler.UpdateEvent)
		// eventsProtected.DELETE("/:id", eventHandler.DeleteEvent)
		// eventsProtected.POST("/:id/guests", eventHandler.AddGuest)
	}
} 